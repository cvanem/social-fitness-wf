{"version":3,"sources":["components/Label.js","views/pages/Table/Table.js"],"names":["useStyles","makeStyles","theme","root","fontFamily","typography","alignItems","borderRadius","display","flexGrow","whiteSpace","cursor","flexShrink","fontSize","pxToRem","fontWeight","fontWeightMedium","height","justifyContent","letterSpacing","minWidth","padding","spacing","textTransform","primary","color","palette","main","backgroundColor","fade","secondary","error","success","warning","Label","className","children","rest","style","classes","clsx","defaultProps","createData","name","calories","fat","carbs","protein","rows","descendingComparator","a","b","orderBy","headCells","id","numeric","disablePadding","label","align","EnhancedTableHead","props","order","onSelectAllClick","onRequestSort","numSelected","rowCount","TableHead","TableRow","map","headCell","TableCell","key","sortDirection","TableSortLabel","active","direction","onClick","property","event","visuallyHidden","useToolbarStyles","paddingLeft","paddingRight","highlight","type","lighten","light","text","dark","title","flex","EnhancedTableToolbar","Toolbar","Typography","variant","component","Tooltip","IconButton","aria-label","width","paper","marginBottom","table","border","clip","margin","overflow","position","top","EnhancedTable","React","useState","setOrder","setOrderBy","selected","setSelected","page","setPage","dense","rowsPerPage","setRowsPerPage","emptyRows","Math","min","length","Paper","Divider","TableContainer","Table","aria-labelledby","size","target","checked","newSelecteds","n","TableBody","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","slice","row","isItemSelected","indexOf","labelId","hover","role","aria-checked","tabIndex","scope","ListItem","ListItemAvatar","Avatar","avatar","ListItemText","primaryTypographyProps","labelTotal","Box","ml","marginRight","edge","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","value"],"mappings":"2LAQMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,WAAYF,EAAMG,WAAWD,WAC7BE,WAAY,SACZC,aAAc,EACdC,QAAS,cACTC,SAAU,EACVC,WAAY,SACZC,OAAQ,UACRC,WAAY,EACZC,SAAUX,EAAMG,WAAWS,QAAQ,IACnCC,WAAYb,EAAMG,WAAWW,iBAC7BC,OAAQ,GACRC,eAAgB,SAChBC,cAAe,GACfC,SAAU,GACVC,QAASnB,EAAMoB,QAAQ,GAAK,GAC5BC,cAAe,aAEjBC,QAAS,CACPC,MAAOvB,EAAMwB,QAAQF,QAAQG,KAC7BC,gBAAiBC,YAAK3B,EAAMwB,QAAQF,QAAQG,KAAM,MAEpDG,UAAW,CACTL,MAAOvB,EAAMwB,QAAQI,UAAUH,KAC/BC,gBAAiBC,YAAK3B,EAAMwB,QAAQI,UAAUH,KAAM,MAEtDI,MAAO,CACLN,MAAOvB,EAAMwB,QAAQK,MAAMJ,KAC3BC,gBAAiBC,YAAK3B,EAAMwB,QAAQK,MAAMJ,KAAM,MAElDK,QAAS,CACPP,MAAOvB,EAAMwB,QAAQM,QAAQL,KAC7BC,gBAAiBC,YAAK3B,EAAMwB,QAAQM,QAAQL,KAAM,MAEpDM,QAAS,CACPR,MAAOvB,EAAMwB,QAAQO,QAAQN,KAC7BC,gBAAiBC,YAAK3B,EAAMwB,QAAQO,QAAQN,KAAM,UAItD,SAASO,EAAT,GAMI,IALFC,EAKC,EALDA,UACAV,EAIC,EAJDA,MACAW,EAGC,EAHDA,SAEGC,GACF,EAFDC,MAEC,yDACKC,EAAUvC,IAEhB,OACE,wCACEmC,UACEK,YAAKD,EAAQpC,KAAT,eACDoC,EAAQd,GAASA,GACjBU,IAEDE,GAEHD,GAYPF,EAAMO,aAAe,CACnBN,UAAW,GACXV,MAAO,aAGMS,O,uaClDf,SAASQ,EAAWC,EAAMC,EAAUC,EAAKC,EAAOC,GAC9C,MAAO,CAAEJ,OAAMC,WAAUC,MAAKC,QAAOC,WAGvC,IAAMC,EAAO,CACXN,EAAW,iBAAkB,IAAK,IAAK,GAAI,KAC3CA,EAAW,gBAAiB,IAAK,GAAM,GAAI,KAC3CA,EAAW,cAAe,IAAK,GAAM,GAAI,GACzCA,EAAW,mBAAoB,IAAK,EAAK,GAAI,GAC7CA,EAAW,cAAe,IAAK,GAAM,GAAI,KACzCA,EAAW,cAAe,IAAK,IAAK,GAAI,KACxCA,EAAW,cAAe,IAAK,EAAK,GAAI,KACxCA,EAAW,cAAe,IAAK,EAAK,GAAI,GACxCA,EAAW,cAAe,IAAK,GAAM,GAAI,GACzCA,EAAW,cAAe,IAAK,GAAK,GAAI,GACxCA,EAAW,cAAe,IAAK,EAAG,GAAI,GACtCA,EAAW,cAAe,IAAK,GAAM,EAAG,IACxCA,EAAW,cAAe,IAAK,GAAM,GAAI,IAG3C,SAASO,EAAqBC,EAAGC,EAAGC,GAClC,OAAID,EAAEC,GAAWF,EAAEE,IACT,EAEND,EAAEC,GAAWF,EAAEE,GACV,EAEF,EAmBT,IAAMC,EAAY,CAChB,CACEC,GAAI,OACJC,SAAS,EACTC,gBAAgB,EAChBC,MAAO,UACPC,MAAO,QAET,CACEJ,GAAI,WACJC,SAAS,EACTC,gBAAgB,EAChBC,MAAO,WACPC,MAAO,QAET,CACEJ,GAAI,aACJC,SAAS,EACTC,gBAAgB,EAChBC,MAAO,cACPC,MAAO,QAET,CACEJ,GAAI,OACJC,SAAS,EACTC,gBAAgB,EAChBC,MAAO,QACPC,MAAO,QAET,CACEJ,GAAI,aACJC,SAAS,EACTC,gBAAgB,EAChBC,MAAO,cACPC,MAAO,QAET,CACEJ,GAAI,UACJC,SAAS,EACTC,gBAAgB,EAChBC,MAAO,UACPC,MAAO,UAIX,SAASC,EAAkBC,GAAQ,IAE/BrB,EAOEqB,EAPFrB,QAEAsB,GAKED,EANFE,iBAMEF,EALFC,OACAT,EAIEQ,EAJFR,QAGAW,GACEH,EAHFI,YAGEJ,EAFFK,SAEEL,EADFG,eAMF,OACE,kBAACG,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACGd,EAAUe,KAAI,SAAAC,GAAQ,OACrB,kBAACC,EAAA,EAAD,CACEC,IAAKF,EAASf,GACdI,MACEW,EAASX,MACLW,EAASX,MACTW,EAASd,QACT,QACA,OAGNiB,cAAepB,IAAYiB,EAASf,IAAKO,GAEzC,kBAACY,EAAA,EAAD,CACEC,OAAQtB,IAAYiB,EAASf,GAC7BqB,UAAWvB,IAAYiB,EAASf,GAAKO,EAAQ,MAC7Ce,SAvBcC,EAuBaR,EAASf,GAvBV,SAAAwB,GACpCf,EAAce,EAAOD,MAwBVR,EAASZ,MACTL,IAAYiB,EAASf,GACpB,0BAAMnB,UAAWI,EAAQwC,gBACZ,SAAVlB,EAAmB,oBAAsB,oBAE1C,OA9BU,IAAAgB,OAiD5B,IAAMG,EAAmB/E,aAAW,SAAAC,GAAK,MAAK,CAC5CC,KAAM,CACJ8E,YAAa/E,EAAMoB,QAAQ,GAC3B4D,aAAchF,EAAMoB,QAAQ,IAE9B6D,UACyB,UAAvBjF,EAAMwB,QAAQ0D,KACV,CACE3D,MAAOvB,EAAMwB,QAAQI,UAAUH,KAC/BC,gBAAiByD,YAAQnF,EAAMwB,QAAQI,UAAUwD,MAAO,MAE1D,CACE7D,MAAOvB,EAAMwB,QAAQ6D,KAAK/D,QAC1BI,gBAAiB1B,EAAMwB,QAAQI,UAAU0D,MAEjDC,MAAO,CACLC,KAAM,gBAIJC,EAAuB,SAAA/B,GAC3B,IAAMrB,EAAUyC,IACRhB,EAAgBJ,EAAhBI,YAER,OACE,kBAAC4B,EAAA,EAAD,CACEzD,UAAWK,YAAKD,EAAQpC,KAAT,eACZoC,EAAQ4C,UAAYnB,EAAc,KAGpCA,EAAc,EACb,kBAAC6B,EAAA,EAAD,CACE1D,UAAWI,EAAQkD,MACnBhE,MAAM,UACNqE,QAAQ,YACRC,UAAU,OAET/B,EANH,aASA,kBAAC6B,EAAA,EAAD,CACE1D,UAAWI,EAAQkD,MACnBK,QAAQ,KACRxC,GAAG,aACHyC,UAAU,OAJZ,UASD/B,EAAc,EACb,kBAACgC,EAAA,EAAD,CAASP,MAAM,UACb,kBAACQ,EAAA,EAAD,CAAYC,aAAW,UACrB,kBAAC,IAAD,QAIJ,kBAACF,EAAA,EAAD,CAASP,MAAM,eACb,kBAACQ,EAAA,EAAD,CAAYC,aAAW,eACrB,kBAAC,IAAD,UAYNlG,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJkB,QAAS,EACT8E,MAAO,QAETC,MAAO,CACLD,MAAO,OACPE,aAAcnG,EAAMoB,QAAQ,IAE9BgF,MAAO,CACLlF,SAAU,KAEZ2D,eAAgB,CACdwB,OAAQ,EACRC,KAAM,gBACNvF,OAAQ,EACRwF,QAAS,EACTC,SAAU,SACVrF,QAAS,EACTsF,SAAU,WACVC,IAAK,GACLT,MAAO,OAII,SAASU,IACtB,IAAMtE,EAAUvC,IADsB,EAEZ8G,IAAMC,SAAS,OAFH,mBAE/BlD,EAF+B,KAExBmD,EAFwB,OAGRF,IAAMC,SAAS,YAHP,mBAG/B3D,EAH+B,KAGtB6D,EAHsB,OAINH,IAAMC,SAAS,IAJT,mBAI/BG,EAJ+B,KAIrBC,EAJqB,OAKdL,IAAMC,SAAS,GALD,mBAK/BK,EAL+B,KAKzBC,EALyB,OAMZP,IAAMC,UAAS,GANH,mBAM/BO,EAN+B,aAOAR,IAAMC,SAAS,KAPf,mBAO/BQ,EAP+B,KAOlBC,EAPkB,KA4DhCC,EACJF,EAAcG,KAAKC,IAAIJ,EAAavE,EAAK4E,OAASR,EAAOG,GAE3D,OACE,yBAAKpF,UAAWI,EAAQpC,MACtB,kBAAC0H,EAAA,EAAD,CAAO1F,UAAWI,EAAQ6D,OACxB,kBAAC,EAAD,CAAsBpC,YAAakD,EAASU,SAC5C,kBAACE,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACE7F,UAAWI,EAAQ+D,MACnB2B,kBAAgB,aAChBC,KAAMZ,EAAQ,QAAU,SACxBpB,aAAW,kBAEX,kBAACvC,EAAD,CACEpB,QAASA,EACTyB,YAAakD,EAASU,OACtB/D,MAAOA,EACPT,QAASA,EACTU,iBAjEiB,SAAAgB,GAC3B,GAAIA,EAAMqD,OAAOC,QAAjB,CACE,IAAMC,EAAerF,EAAKoB,KAAI,SAAAkE,GAAC,OAAIA,EAAE3F,QACrCwE,EAAYkB,QAGdlB,EAAY,KA4DFpD,cAxEc,SAACe,EAAOD,GAEhCmC,EADc5D,IAAYyB,GAAsB,QAAVhB,EACrB,OAAS,OAC1BoD,EAAWpC,IAsEDZ,SAAUjB,EAAK4E,SAEjB,kBAACW,EAAA,EAAD,KArSZ,SAAoBC,EAAOC,GACzB,IAAMC,EAAiBF,EAAMpE,KAAI,SAACuE,EAAIC,GAAL,MAAe,CAACD,EAAIC,MAMrD,OALAF,EAAeG,MAAK,SAAC3F,EAAGC,GACtB,IAAMU,EAAQ4E,EAAWvF,EAAE,GAAIC,EAAE,IACjC,OAAc,IAAVU,EAAoBA,EACjBX,EAAE,GAAKC,EAAE,MAEXuF,EAAetE,KAAI,SAAAuE,GAAE,OAAIA,EAAG,MA+RtBG,CAAW9F,EA5S1B,SAAuBa,EAAOT,GAC5B,MAAiB,SAAVS,EACH,SAACX,EAAGC,GAAJ,OAAUF,EAAqBC,EAAGC,EAAGC,IACrC,SAACF,EAAGC,GAAJ,OAAWF,EAAqBC,EAAGC,EAAGC,IAySZ2F,CAAclF,EAAOT,IACpC4F,MAAM5B,EAAOG,EAAaH,EAAOG,EAAcA,GAC/CnD,KAAI,SAAC6E,EAAKL,GACT,IA9BGjG,EA8BGuG,GA9BHvG,EA8B+BsG,EAAItG,MA9BC,IAA5BuE,EAASiC,QAAQxG,IA+BtByG,EAAO,kCAA8BR,GAE3C,OACE,kBAACzE,EAAA,EAAD,CACEkF,OAAK,EACLzE,QAAS,SAAAE,GAA4BmE,EAAItG,MACzC2G,KAAK,WACLC,eAAcL,EACdM,UAAW,EACXjF,IAAK0E,EAAItG,KACTuE,SAAUgC,GAEV,kBAAC5E,EAAA,EAAD,CACEyB,UAAU,KACVzC,GAAI8F,EACJK,MAAM,MACNpI,QAAQ,QAER,kBAACqI,EAAA,EAAD,CAAUnF,IAAK0E,EAAItG,MACjB,kBAACgH,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEzH,UAAWI,EAAQsH,OACnB3B,KAAK,WAGT,kBAAC4B,EAAA,EAAD,CACEtI,QAASyH,EAAItG,KACbb,UAAU,eACViI,uBAAwB,CAAEjE,QAAS,QAErC,kBAACD,EAAA,EAAD,CACEC,QAAQ,QACRrE,MAAM,oBAIZ,kBAAC6C,EAAA,EAAD,CAAWZ,MAAM,QACf,kBAACxB,EAAA,EAAD,CAAOC,UAAWI,EAAQyH,WAAYvI,MAAM,WAA5C,eAIF,kBAAC6C,EAAA,EAAD,CAAWZ,MAAM,QACf,yBAAKpB,MAAO,CAAElB,SAAU,MAAxB,gBAEE,kBAAC6E,EAAA,EAAD,CAAYC,aAAW,eACrB,kBAAC,IAAD,SAIN,kBAAC5B,EAAA,EAAD,CAAWZ,MAAM,QACf,kBAACuG,EAAA,EAAD,CAAKC,IAAK,GACR,kBAACjE,EAAA,EAAD,CACE3D,MAAO,CAAE6H,YAAa,GACtBC,KAAK,MACLlE,aAAW,UAEX,kBAAC,IAAD,OANJ,yBAWF,kBAAC5B,EAAA,EAAD,CAAWZ,MAAM,UACf,kBAACuG,EAAA,EAAD,CAAKC,IAAK,GACR,kBAACR,EAAA,EAAD,CAAUlG,gBAAc,EAACe,IAAK0E,EAAItG,MAChC,kBAACgH,EAAA,EAAD,KACE,kBAAC1D,EAAA,EAAD,CAAYmE,KAAK,MAAMlE,aAAW,UAChC,kBAAC,IAAD,QAGJ,kBAAC4D,EAAA,EAAD,CACEtI,QAAQ,uBACRM,UAAU,UACViI,uBAAwB,CAAEjE,QAAS,WAK3C,kBAACxB,EAAA,EAAD,CAAWZ,MAAM,SACf,kBAACuC,EAAA,EAAD,CAAYmE,KAAK,MAAMlE,aAAW,UAChC,kBAAC,IAAD,YAMXuB,EAAY,GACX,kBAACtD,EAAA,EAAD,CAAU7B,MAAO,CAAErB,QAASqG,EAAQ,GAAK,IAAMG,IAC7C,kBAACnD,EAAA,EAAD,CAAW+F,QAAS,QAM9B,kBAACC,EAAA,EAAD,CACEC,mBAAoB,CAAC,GAAI,IACzBxE,UAAU,MACVyE,MAAOxH,EAAK4E,OACZL,YAAaA,EACbH,KAAMA,EACNqD,aA/IiB,SAAC3F,EAAO4F,GAC/BrD,EAAQqD,IA+IFC,oBA5IwB,SAAA7F,GAC9B0C,EAAeoD,SAAS9F,EAAMqD,OAAO0C,MAAO,KAC5CxD,EAAQ","file":"static/js/5.7e7edc71.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n  fade,\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    fontFamily: theme.typography.fontFamily,\r\n    alignItems: 'center',\r\n    borderRadius: 2,\r\n    display: 'inline-flex',\r\n    flexGrow: 0,\r\n    whiteSpace: 'nowrap',\r\n    cursor: 'default',\r\n    flexShrink: 0,\r\n    fontSize: theme.typography.pxToRem(12),\r\n    fontWeight: theme.typography.fontWeightMedium,\r\n    height: 20,\r\n    justifyContent: 'center',\r\n    letterSpacing: 0.5,\r\n    minWidth: 20,\r\n    padding: theme.spacing(0.5, 1),\r\n    textTransform: 'uppercase',\r\n  },\r\n  primary: {\r\n    color: theme.palette.primary.main,\r\n    backgroundColor: fade(theme.palette.primary.main, 0.08)\r\n  },\r\n  secondary: {\r\n    color: theme.palette.secondary.main,\r\n    backgroundColor: fade(theme.palette.secondary.main, 0.08)\r\n  },\r\n  error: {\r\n    color: theme.palette.error.main,\r\n    backgroundColor: fade(theme.palette.error.main, 0.08)\r\n  },\r\n  success: {\r\n    color: theme.palette.success.main,\r\n    backgroundColor: fade(theme.palette.success.main, 0.08)\r\n  },\r\n  warning: {\r\n    color: theme.palette.warning.main,\r\n    backgroundColor: fade(theme.palette.warning.main, 0.08)\r\n  }\r\n}));\r\n\r\nfunction Label({\r\n  className,\r\n  color,\r\n  children,\r\n  style,\r\n  ...rest\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <span\r\n      className={\r\n        clsx(classes.root, {\r\n          [classes[color]]: color\r\n        }, className)\r\n      }\r\n      {...rest}\r\n    >\r\n      {children}\r\n    </span>\r\n  );\r\n}\r\n\r\nLabel.propTypes = {\r\n  children: PropTypes.node,\r\n  className: PropTypes.string,\r\n  style: PropTypes.object,\r\n  color: PropTypes.oneOf(['primary', 'secondary', 'error', 'warning', 'success'])\r\n};\r\n\r\nLabel.defaultProps = {\r\n  className: '',\r\n  color: 'secondary'\r\n};\r\n\r\nexport default Label;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport * as Icons from '@material-ui/icons';\r\nimport {\r\n  Divider,\r\n  ListItemText,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  Avatar,\r\n  Grid,\r\n  Button,\r\n  ListItemSecondaryAction,\r\n  Box\r\n} from '@material-ui/core';\r\nimport Label from 'src/components/Label';\r\nimport ComboBox from './ComboBox';\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData('Vincent Chuang', 305, 3.7, 67, 4.3),\r\n  createData('Rudy Sanchez ', 452, 25.0, 51, 4.9),\r\n  createData('Alyssa Arro', 262, 16.0, 24, 6.0),\r\n  createData('Thomas Jefferson', 159, 6.0, 24, 4.0),\r\n  createData('Eli Sanchez', 356, 16.0, 49, 3.9),\r\n  createData('Test User 1', 408, 3.2, 87, 6.5),\r\n  createData('Test User 2', 237, 9.0, 37, 4.3),\r\n  createData('Test User 3', 375, 0.0, 94, 0.0),\r\n  createData('Test User 4', 518, 26.0, 65, 7.0),\r\n  createData('Test User 5', 392, 0.2, 98, 0.0),\r\n  createData('Test User 6', 318, 0, 81, 2.0),\r\n  createData('Test User 7', 360, 19.0, 9, 37.0),\r\n  createData('Test User 8', 437, 18.0, 63, 4.0)\r\n];\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  {\r\n    id: 'name',\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Profile',\r\n    align: 'left'\r\n  },\r\n  {\r\n    id: 'acquired',\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'Acquired',\r\n    align: 'left'\r\n  },\r\n  {\r\n    id: 'leadStatus',\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'Lead Status',\r\n    align: 'left'\r\n  },\r\n  {\r\n    id: 'note',\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'Notes',\r\n    align: 'left'\r\n  },\r\n  {\r\n    id: 'apointment',\r\n    numeric: true,\r\n    disablePadding: true,\r\n    label: 'Appointment',\r\n    align: 'left'\r\n  },\r\n  {\r\n    id: 'actions',\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'Actions',\r\n    align: 'Right'\r\n  }\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const {\r\n    classes,\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort\r\n  } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {headCells.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={\r\n              headCell.align\r\n                ? headCell.align\r\n                : headCell.numeric\r\n                ? 'right'\r\n                : 'left'\r\n            }\r\n            //padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired\r\n};\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1)\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85)\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark\r\n        },\r\n  title: {\r\n    flex: '1 1 100%'\r\n  }\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h4\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          People\r\n        </Typography>\r\n      )}\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: 8,\r\n    width: '100%'\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2)\r\n  },\r\n  table: {\r\n    minWidth: 750\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1\r\n  }\r\n}));\r\n\r\nexport default function EnhancedTable() {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('calories');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(true);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = event => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map(n => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    /*const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n    */\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = event => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = name => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows =\r\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar numSelected={selected.length} />\r\n        <Divider />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.name);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={event => handleClick(event, row.name)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell\r\n                        component=\"th\"\r\n                        id={labelId}\r\n                        scope=\"row\"\r\n                        padding=\"none\"\r\n                      >\r\n                        <ListItem key={row.name}>\r\n                          <ListItemAvatar>\r\n                            <Avatar\r\n                              className={classes.avatar}\r\n                              size=\"large\"\r\n                            ></Avatar>\r\n                          </ListItemAvatar>\r\n                          <ListItemText\r\n                            primary={row.name}\r\n                            secondary=\"303-333-3333\"\r\n                            primaryTypographyProps={{ variant: 'h6' }}\r\n                          />\r\n                          <Typography\r\n                            variant=\"body2\"\r\n                            color=\"textSecondary\"\r\n                          ></Typography>\r\n                        </ListItem>\r\n                      </TableCell>\r\n                      <TableCell align=\"left\">\r\n                        <Label className={classes.labelTotal} color=\"success\">\r\n                          April 20th\r\n                        </Label>\r\n                      </TableCell>\r\n                      <TableCell align=\"left\">\r\n                        <div style={{ minWidth: 130 }}>\r\n                          Started Trial\r\n                          <IconButton aria-label=\"filter list\">\r\n                            <Icons.ArrowDropDown />\r\n                          </IconButton>\r\n                        </div>\r\n                      </TableCell>\r\n                      <TableCell align=\"left\">\r\n                        <Box ml={-3}>\r\n                          <IconButton\r\n                            style={{ marginRight: 4 }}\r\n                            edge=\"end\"\r\n                            aria-label=\"delete\"\r\n                          >\r\n                            <Icons.Edit />\r\n                          </IconButton>\r\n                          Some notes here ....\r\n                        </Box>\r\n                      </TableCell>\r\n                      <TableCell align=\"center\">\r\n                        <Box ml={-3}>\r\n                          <ListItem disablePadding key={row.name}>\r\n                            <ListItemAvatar>\r\n                              <IconButton edge=\"end\" aria-label=\"delete\">\r\n                                <Icons.Edit />\r\n                              </IconButton>\r\n                            </ListItemAvatar>\r\n                            <ListItemText\r\n                              primary=\"Thursday, April 30th\"\r\n                              secondary=\"3:30 PM\"\r\n                              primaryTypographyProps={{ variant: 'h6' }}\r\n                            />\r\n                          </ListItem>\r\n                        </Box>\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">\r\n                        <IconButton edge=\"end\" aria-label=\"delete\">\r\n                          <Icons.MoreVert />\r\n                        </IconButton>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}