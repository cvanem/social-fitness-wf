{"version":3,"sources":["components/Label.js","hooks/useIsMountedRef.js","components/GenericMoreButton.js","views/reports/DashboardAlternativeView/CustomerActivity.js","views/reports/DashboardAlternativeView/EarningsSegmentation/index.js","views/reports/DashboardAlternativeView/FinancialStats/Chart.js","views/reports/DashboardAlternativeView/FinancialStats/index.js","views/reports/DashboardAlternativeView/Header.js","views/reports/DashboardAlternativeView/LatestOrders.js","views/reports/DashboardAlternativeView/MostProfitableProducts/CircularProgress.js","views/reports/DashboardAlternativeView/MostProfitableProducts/index.js","views/reports/DashboardAlternativeView/Overview.js","views/reports/DashboardAlternativeView/TopReferrals.js","views/reports/DashboardAlternativeView/TopReferrals2.js","views/reports/DashboardAlternativeView/TopReferrals3.js","views/reports/DashboardAlternativeView/index.js"],"names":["useStyles","makeStyles","theme","root","fontFamily","typography","alignItems","borderRadius","display","flexGrow","whiteSpace","cursor","flexShrink","fontSize","pxToRem","fontWeight","fontWeightMedium","height","justifyContent","letterSpacing","minWidth","padding","spacing","textTransform","primary","color","palette","main","backgroundColor","fade","secondary","error","success","warning","Label","className","children","rest","style","classes","clsx","defaultProps","useIsMountedRef","isMounted","useRef","useEffect","current","menu","width","maxWidth","memo","props","moreRef","useState","openMenu","setOpenMenu","Tooltip","title","IconButton","onClick","ref","Menu","anchorEl","anchorOrigin","vertical","horizontal","onClose","open","PaperProps","transformOrigin","MenuItem","ListItemIcon","ListItemText","item","borderRight","divider","textAlign","flexDirection","position","chart","FinancialStats","timeRanges","value","text","actionIcon","marginRight","Header","Grid","container","justify","Breadcrumbs","separator","aria-label","Link","variant","to","component","RouterLink","Typography","navigateNextIcon","marginLeft","LatestOrders","circle1","stroke","type","fill","strokeWidth","circle2","animation","strokeDasharray","image","subscriptions","colors","green","MostProfitableProducts","breakpoints","up","down","borderBottom","valueContainer","label","Overview","Card","md","sm","xs","gutterBottom","gutterBotton","labelTotal","avatar","fontWeightBold","common","white","TopReferrals","isMountedRef","referrals","setReferrals","getReferrals","useCallback","axios","get","then","response","data","CardHeader","action","Divider","List","disablePadding","map","referral","i","ListItem","length","key","name","ListItemAvatar","Avatar","size","day","phone","primaryTypographyProps","TopReferrals2","noWrap","secondaryTypographyProps","TopReferrals3","Button","background","dark","minHeight","paddingTop","paddingBottom","paddingLeft","paddingRight","DashboardAlternativeView","Page","Container","lg"],"mappings":"2LAQMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,WAAYF,EAAMG,WAAWD,WAC7BE,WAAY,SACZC,aAAc,EACdC,QAAS,cACTC,SAAU,EACVC,WAAY,SACZC,OAAQ,UACRC,WAAY,EACZC,SAAUX,EAAMG,WAAWS,QAAQ,IACnCC,WAAYb,EAAMG,WAAWW,iBAC7BC,OAAQ,GACRC,eAAgB,SAChBC,cAAe,GACfC,SAAU,GACVC,QAASnB,EAAMoB,QAAQ,GAAK,GAC5BC,cAAe,aAEjBC,QAAS,CACPC,MAAOvB,EAAMwB,QAAQF,QAAQG,KAC7BC,gBAAiBC,YAAK3B,EAAMwB,QAAQF,QAAQG,KAAM,MAEpDG,UAAW,CACTL,MAAOvB,EAAMwB,QAAQI,UAAUH,KAC/BC,gBAAiBC,YAAK3B,EAAMwB,QAAQI,UAAUH,KAAM,MAEtDI,MAAO,CACLN,MAAOvB,EAAMwB,QAAQK,MAAMJ,KAC3BC,gBAAiBC,YAAK3B,EAAMwB,QAAQK,MAAMJ,KAAM,MAElDK,QAAS,CACPP,MAAOvB,EAAMwB,QAAQM,QAAQL,KAC7BC,gBAAiBC,YAAK3B,EAAMwB,QAAQM,QAAQL,KAAM,MAEpDM,QAAS,CACPR,MAAOvB,EAAMwB,QAAQO,QAAQN,KAC7BC,gBAAiBC,YAAK3B,EAAMwB,QAAQO,QAAQN,KAAM,UAItD,SAASO,EAAT,GAMI,IALFC,EAKC,EALDA,UACAV,EAIC,EAJDA,MACAW,EAGC,EAHDA,SAEGC,GACF,EAFDC,MAEC,yDACKC,EAAUvC,IAEhB,OACE,wCACEmC,UACEK,YAAKD,EAAQpC,KAAT,eACDoC,EAAQd,GAASA,GACjBU,IAEDE,GAEHD,GAYPF,EAAMO,aAAe,CACnBN,UAAW,GACXV,MAAO,aAGMS,O,sQClFA,SAASQ,IACtB,IAAMC,EAAYC,kBAAO,GAMzB,OAJAC,qBAAU,kBAAM,WACdF,EAAUG,SAAU,KACnB,IAEIH,E,8GCYH3C,EAAYC,aAAW,iBAAO,CAClC8C,KAAM,CACJC,MAAO,IACPC,SAAU,YA+DCC,sBA3Df,SAA2BC,GACzB,IAAMZ,EAAUvC,IACVoD,EAAUR,iBAAO,MAFS,EAGAS,oBAAS,GAHT,mBAGzBC,EAHyB,KAGfC,EAHe,KAahC,OACE,oCACE,kBAACC,EAAA,EAAD,CAASC,MAAM,gBACb,kBAACC,EAAA,EAAD,iBACMP,EADN,CAEEQ,QAbe,WACrBJ,GAAY,IAaNK,IAAKR,IAEL,kBAAC,IAAD,CAAUvC,SAAS,YAGvB,kBAACgD,EAAA,EAAD,CACEC,SAAUV,EAAQN,QAClBiB,aAAc,CACZC,SAAU,MACVC,WAAY,QAEdC,QArBkB,WACtBX,GAAY,IAqBRY,KAAMb,EACNc,WAAY,CAAEjC,UAAWI,EAAQQ,MACjCsB,gBAAiB,CACfL,SAAU,MACVC,WAAY,SAGd,kBAACK,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,OAEF,kBAACC,EAAA,EAAD,CAAchD,QAAQ,aAExB,kBAAC8C,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,OAEF,kBAACC,EAAA,EAAD,CAAchD,QAAQ,iBChDdvB,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,GACNsE,KAAM,CACJpD,QAASnB,EAAMoB,QAAQ,GACvBb,SAAU,EACV,kBAAmB,CACjBiE,YAAY,aAAD,OAAexE,EAAMwB,QAAQiD,e,mBCd5B1E,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,GACNsE,KAAM,CACJG,UAAW,SACXnE,SAAU,EACVD,QAAS,OACTqE,cAAe,SACf3D,eAAgB,SAChBG,QAASnB,EAAMoB,QAAQ,EAAG,GAC1B,uBAAwB,CACtBoD,YAAY,aAAD,OAAexE,EAAMwB,QAAQiD,e,aCpB5B1E,aAAW,iBAAO,CAClCE,KAAM,CACJ2E,SAAU,gBCEI7E,aAAW,iBAAO,CAClCE,KAAM,GACN4E,MAAO,CACL9D,OAAQ,SAyDG+D,I,6BCxDTC,EAAa,CACjB,CACEC,MAAO,QACPC,KAAM,SAER,CACED,MAAO,YACPC,KAAM,aAER,CACED,MAAO,eACPC,KAAM,gBAER,CACED,MAAO,YACPC,KAAM,cAIJnF,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,GACNiF,WAAY,CACVC,YAAanF,EAAMoB,QAAQ,QAI/B,SAASgE,EAAT,GAAyC,IAAvBnD,EAAsB,EAAtBA,UAAcE,EAAQ,6BAChCE,EAAUvC,IADsB,GAEpB4C,iBAAO,MACSS,oBAAS,IAHL,gCAIJA,mBAAS4B,EAAW,GAAGE,OAJnB,6BAMtC,OACE,kBAACI,EAAA,EAAD,eACEpD,UAAWK,YAAKD,EAAQpC,KAAMgC,GAC9BqD,WAAS,EACTC,QAAQ,gBACRnE,QAAS,GACLe,GAEJ,kBAACkD,EAAA,EAAD,CAAMd,MAAI,GACR,kBAACiB,EAAA,EAAD,CACEC,UAAW,kBAAC,IAAD,CAAkB9E,SAAS,UACtC+E,aAAW,cAEX,kBAACC,EAAA,EAAD,CACEC,QAAQ,QACRrE,MAAM,UACNsE,GAAG,OACHC,UAAWC,KAJb,2BASF,kBAACC,EAAA,EAAD,CACEJ,QAAQ,KACRrE,MAAM,eAFR,4BAiBR6D,EAAO7C,aAAe,GAEP6C,Q,sECtDGrF,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,GACNgG,iBAAkB,CAChBC,WAAYlG,EAAMoB,QAAQ,QAyHf+E,I,QC5JGpG,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ6C,MAAO,GACP/B,OAAQ,IAEVqF,QAAS,CACPC,OAA+B,SAAvBrG,EAAMwB,QAAQ8E,KAAkB,mBAAqB,mBAC7DC,KAAM,OACNC,YAAa,GAEfC,QAAS,CACPJ,OAAQrG,EAAMwB,QAAQI,UAAUH,KAChC8E,KAAM,OACNC,YAAa,EACbE,UAAW,kCAEb,sBAAuB,CACrB,KAAM,CACJC,gBAAiB,cCML5G,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,GACN2G,MAAO,CACLlG,WAAY,EACZK,OAAQ,GACR+B,MAAO,IAET+D,cAAe,CACbhG,WAAYb,EAAMG,WAAWW,kBAE/BkE,MAAO,CACLzD,MAAOuF,IAAOC,MAAM,KACpBlG,WAAYb,EAAMG,WAAWW,kBAE/BmF,iBAAkB,CAChBC,WAAYlG,EAAMoB,QAAQ,QAqJf4F,ICtLTlH,EAAYC,aAAW,SAACC,GAAD,YAAY,CACvCC,KAAM,GACNsE,MAAI,GACFpD,QAASnB,EAAMoB,QAAQ,GACvBsD,UAAW,UAFT,cAGD1E,EAAMiH,YAAYC,GAAG,MAAQ,CAC5B,uBAAwB,CACtB1C,YAAY,aAAD,OAAexE,EAAMwB,QAAQiD,YAL1C,cAQDzE,EAAMiH,YAAYE,KAAK,MAAQ,CAC9B,uBAAwB,CACtBC,aAAa,aAAD,OAAepH,EAAMwB,QAAQiD,YAV3C,GAcJ4C,eAAgB,CACd/G,QAAS,OACTF,WAAY,SACZY,eAAgB,UAElBsG,MAAO,CACLpB,WAAYlG,EAAMoB,QAAQ,QAyJfmG,MArJf,YAA2C,IAAvBtF,EAAsB,EAAtBA,UAAcE,EAAQ,6BAClCE,EAAUvC,IAQhB,OACE,kBAAC0H,EAAA,EAAD,eACEvF,UAAWK,YAAKD,EAAQpC,KAAMgC,IAC1BE,GAEJ,kBAACkD,EAAA,EAAD,CACEjF,WAAW,SACXkF,WAAS,EACTC,QAAQ,iBAEN,kBAACF,EAAA,EAAD,CACApD,UAAWI,EAAQkC,KACnBA,MAAI,EACJkD,GAAI,EACJC,GAAI,EACJC,GAAI,IAEJ,kBAAC3B,EAAA,EAAD,CAAYJ,QAAQ,MAApB,MAGA,yBAAK3D,UAAWI,EAAQgF,gBACtB,kBAACrB,EAAA,EAAD,CACEJ,QAAQ,KACRrE,MAAM,cACNqG,cAAY,GAHd,YAQF,yBAAK3F,UAAWI,EAAQgF,gBACxB,kBAACrF,EAAA,EAAD,CACIC,UAAWI,EAAQiF,MACnB/F,MAAM,WAFV,kBAQF,kBAAC8D,EAAA,EAAD,CACEpD,UAAWI,EAAQkC,KACnBA,MAAI,EACJkD,GAAI,EACJC,GAAI,EACJC,GAAI,IAEJ,kBAAC3B,EAAA,EAAD,CACEJ,QAAQ,MADV,MAMA,yBAAK3D,UAAWI,EAAQgF,gBACtB,kBAACrB,EAAA,EAAD,CACEJ,QAAQ,KACRrE,MAAM,cACNsG,cAAY,GAHd,UAQF,yBAAK5F,UAAWI,EAAQgF,gBACxB,kBAACrF,EAAA,EAAD,CACIC,UAAWI,EAAQiF,MACnB/F,MAAM,WAFV,kBAQF,kBAAC8D,EAAA,EAAD,CACEpD,UAAWI,EAAQkC,KACnBA,MAAI,EACJkD,GAAI,EACJC,GAAI,EACJC,GAAI,IAEJ,kBAAC3B,EAAA,EAAD,CAEEJ,QAAQ,MAFV,KAOA,yBAAK3D,UAAWI,EAAQgF,gBACtB,kBAACrB,EAAA,EAAD,CACEJ,QAAQ,KACRrE,MAAM,cAENqG,cAAY,GAJd,UASF,yBAAK3F,UAAWI,EAAQgF,gBACxB,kBAACrF,EAAA,EAAD,CACIC,UAAWI,EAAQiF,MACnB/F,MAAM,WAFV,iBAQF,kBAAC8D,EAAA,EAAD,CACEpD,UAAWI,EAAQkC,KACnBA,MAAI,EACJkD,GAAI,EACJC,GAAI,EACJC,GAAI,IAEJ,kBAAC3B,EAAA,EAAD,CAAYJ,QAAQ,MAApB,OAGA,yBAAK3D,UAAWI,EAAQgF,gBACtB,kBAACrB,EAAA,EAAD,CACEJ,QAAQ,KACRrE,MAAM,cACNqG,cAAY,GAHd,UAQF,yBAAK3F,UAAWI,EAAQgF,gBACxB,kBAACrF,EAAA,EAAD,CACIC,UAAWI,EAAQyF,WACnBvG,MAAM,WAFV,cChJJzB,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJK,QAAS,OACTqE,cAAe,UAEjBoD,OAAQ,CACNpH,SAAU,GACVE,WAAYb,EAAMG,WAAW6H,eAC7BzG,MAAOvB,EAAMwB,QAAQyG,OAAOC,WAoFjBC,MAhFf,YAA+C,IAAvBlG,EAAsB,EAAtBA,UAAcE,EAAQ,6BACtCE,EAAUvC,IACVsI,EAAe5F,IAFuB,EAGVW,mBAAS,MAHC,mBAGrCkF,EAHqC,KAG1BC,EAH0B,KAKtCC,EAAeC,uBAAY,WAC/BC,IACGC,IAAI,8BACJC,MAAK,SAACC,GACDR,EAAaxF,SACf0F,EAAaM,EAASC,KAAKR,gBAGhC,CAACD,IAMJ,OAJAzF,qBAAU,WACR4F,MACC,CAACA,IAECF,EAKH,kBAACb,EAAA,EAAD,eACEvF,UAAWK,YAAKD,EAAQpC,KAAMgC,IAC1BE,GAEJ,kBAAC2G,EAAA,EAAD,CACEC,OAAQ,kBAAC,EAAD,MACRxF,MAAM,cAER,kBAACyF,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAMC,gBAAc,GACjBb,EAAUc,KAAI,SAACC,EAAUC,GAAX,OACb,kBAACC,EAAA,EAAD,CACElH,MAAO,CAAErB,OAAQ,IACjB0D,QAAS4E,EAAIhB,EAAUkB,OAAS,EAChCC,IAAKJ,EAASK,MAEd,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACE1H,UAAWI,EAAQ0F,OACnB6B,KAAK,QACLxH,MAAO,CAAEV,gBAAiB0H,EAAS7H,QAEnC,kBAAC8D,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAASnF,WAAW,UAC1C,kBAACiF,EAAA,EAAD,CAAMd,MAAI,EAACe,WAAS,EAACC,QAAQ,SAASoC,GAAI,IAA1C,OAIA,kBAACtC,EAAA,EAAD,CAAMd,MAAI,EAACe,WAAS,EAACC,QAAQ,SAASoC,GAAI,IACzCyB,EAASS,QAMhB,kBAACvF,EAAA,EAAD,CACEhD,QAAS8H,EAASK,KAClB7H,UAAWwH,EAASU,MACpBC,uBAAwB,CAAEnE,QAAS,QAErC,kBAACI,EAAA,EAAD,CACEJ,QAAQ,QACRrE,MAAM,iBAEL6H,EAASpE,aA/Cb,MCnCLlF,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJK,QAAS,OACTqE,cAAe,UAEjBoD,OAAQ,CACNpH,SAAU,GACVE,WAAYb,EAAMG,WAAW6H,eAC7BzG,MAAOvB,EAAMwB,QAAQyG,OAAOC,WAuEjB8B,OAnEf,YAAgD,IAAvB/H,EAAsB,EAAtBA,UAAcE,EAAQ,6BACvCE,EAAUvC,IACVsI,EAAe5F,IAFwB,EAGXW,mBAAS,MAHE,mBAGtCkF,EAHsC,KAG3BC,EAH2B,KAKvCC,EAAeC,uBAAY,WAC/BC,IAAMC,IAAI,8BAA8BC,MAAK,SAAAC,GACvCR,EAAaxF,SACf0F,EAAaM,EAASC,KAAKR,gBAG9B,CAACD,IAMJ,OAJAzF,qBAAU,WACR4F,MACD,CAACA,IAEGF,EAKH,kBAACb,EAAA,EAAD,eAAMvF,UAAWK,YAAKD,EAAQpC,KAAMgC,IAAgBE,GAClD,kBAAC2G,EAAA,EAAD,CACEC,OAAQ,kBAAC,EAAD,MACRxF,MAAM,0BAER,kBAACyF,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAMC,gBAAc,GACjBb,EAAUc,KAAI,SAACC,EAAUC,GAAX,OACb,kBAACC,EAAA,EAAD,CACElH,MAAO,CAAErB,OAAQ,IACjB0D,QAAS4E,EAAIhB,EAAUkB,OAAS,EAChCC,IAAKJ,EAASK,MAEd,kBAACC,EAAA,EAAD,CAAgBtH,MAAO,CAAEW,SAAU,KACjC,kBAACsC,EAAA,EAAD,CAAMC,WAAS,EAAClF,WAAW,UACzB,kBAACiF,EAAA,EAAD,CAAMd,MAAI,EAACe,WAAS,EAACqC,GAAI,IACvB,kBAAC3F,EAAA,EAAD,CAAOC,UAAWI,EAAQyF,WAAYvG,MAAM,WAA5C,aAIF,kBAAC8D,EAAA,EAAD,CAAMd,MAAI,EAACe,WAAS,EAACqC,GAAI,IAAzB,cAKJ,kBAACrD,EAAA,EAAD,CACEhD,QAAS8H,EAASK,KAClB7H,UAAWwH,EAASU,MACpBC,uBAAwB,CAAEE,QAAQ,EAAMrE,QAAS,MACjDsE,yBAA0B,CAAED,QAAQ,EAAMrE,QAAS,QAErD,kBAACI,EAAA,EAAD,CAAYJ,QAAQ,QAAQrE,MAAM,iBAC/B6H,EAASpE,aApCb,MC7BLlF,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJK,QAAS,OACTqE,cAAe,UAEjBoD,OAAQ,CACNpH,SAAU,GACVE,WAAYb,EAAMG,WAAW6H,eAC7BzG,MAAOvB,EAAMwB,QAAQyG,OAAOC,WAsFjBiC,OAlFf,YAAgD,IAAvBlI,EAAsB,EAAtBA,UAAcE,EAAQ,6BACvCE,EAAUvC,KACVsI,EAAe5F,IAFwB,EAGXW,mBAAS,MAHE,mBAGtCkF,EAHsC,KAG3BC,EAH2B,KAKvCC,EAAeC,uBAAY,WAC/BC,IAAMC,IAAI,8BAA8BC,MAAK,SAAAC,GACvCR,EAAaxF,SACf0F,EAAaM,EAASC,KAAKR,gBAG9B,CAACD,IAMJ,OAJAzF,qBAAU,WACR4F,MACC,CAACA,IAECF,EAKH,kBAACb,EAAA,EAAD,eAAMvF,UAAWK,YAAKD,EAAQpC,KAAMgC,IAAgBE,GAClD,kBAAC2G,EAAA,EAAD,CAAYC,OAAQ,kBAAC,EAAD,MAAuBxF,MAAM,sBACjD,kBAACyF,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAMC,gBAAc,GACjBb,EAAUc,KAAI,SAACC,EAAUC,GAAX,OACb,kBAACC,EAAA,EAAD,CACElH,MAAO,CAAErB,OAAQ,IACjB0D,QAAS4E,EAAIhB,EAAUkB,OAAS,EAChCC,IAAKJ,EAASK,MAEd,kBAACC,EAAA,EAAD,CAAgBtH,MAAO,CAAEW,SAAU,KACjC,kBAACsC,EAAA,EAAD,CAAMC,WAAS,EAAClF,WAAW,UACzB,kBAACiF,EAAA,EAAD,CAAMd,MAAI,EAACe,WAAS,EAACqC,GAAI,IACvB,kBAAC3F,EAAA,EAAD,CAAOC,UAAWI,EAAQyF,WAAYvG,MAAM,WAA5C,YAIF,kBAAC8D,EAAA,EAAD,CAAMd,MAAI,EAACe,WAAS,EAACqC,GAAI,IAAzB,cAKJ,kBAACrD,EAAA,EAAD,CACEhD,QAAS8H,EAASK,KAClB7H,UAAWwH,EAASU,MACpBC,uBAAwB,CAAEE,QAAQ,EAAMrE,QAAS,MACjDsE,yBAA0B,CAAED,QAAQ,EAAMrE,QAAS,QAErD,kBAACI,EAAA,EAAD,CAAYJ,QAAQ,QAAQrE,MAAM,iBAC/B6H,EAASpE,OAEZ,kBAACK,EAAA,EAAD,CACEC,WAAS,EACTlD,MAAO,CAAEW,SAAU,KACnB3C,WAAW,SACXmF,QAAQ,WACRnE,QAAS,GAET,kBAACiE,EAAA,EAAD,CAAMd,MAAI,GACR,kBAAC6F,EAAA,EAAD,CAAQR,KAAK,QAAQhE,QAAQ,YAAYrE,MAAM,WAA/C,WAIF,kBAAC8D,EAAA,EAAD,KACE,kBAAC+E,EAAA,EAAD,CAAQR,KAAK,QAAQhE,QAAQ,WAAWrE,MAAM,SAA9C,mBAhDL,MCtCLzB,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJyB,gBAAiB1B,EAAMwB,QAAQ6I,WAAWC,KAC1CC,UAAW,OACXC,WAAYxK,EAAMoB,QAAQ,GAC1BqJ,cAAezK,EAAMoB,QAAQ,IAE/BkE,UAAU,eACPtF,EAAMiH,YAAYC,GAAG,MAAQ,CAC5BwD,YAAa,GACbC,aAAc,SA+BLC,UA1Bf,WACE,IAAMvI,EAAUvC,KAEhB,OACE,kBAAC+K,EAAA,EAAD,CAAM5I,UAAWI,EAAQpC,KAAMsD,MAAM,0BACnC,kBAACuH,EAAA,EAAD,CAAW/H,UAAU,EAAOd,UAAWI,EAAQiD,WAC7C,kBAAC,EAAD,MACA,kBAACD,EAAA,EAAD,CAAMC,WAAS,EAAClE,QAAS,GACvB,kBAACiE,EAAA,EAAD,CAAMd,MAAI,EAACoD,GAAI,IACb,kBAAC,EAAD,OAEF,kBAACtC,EAAA,EAAD,CAAMd,MAAI,EAACwG,GAAI,EAAGpD,GAAI,IACpB,kBAAC,EAAD,OAEF,kBAACtC,EAAA,EAAD,CAAMd,MAAI,EAACwG,GAAI,EAAGpD,GAAI,IACpB,kBAAC,GAAD,OAEF,kBAACtC,EAAA,EAAD,CAAMd,MAAI,EAACwG,GAAI,EAAGpD,GAAI,IACpB,kBAAC,GAAD","file":"static/js/6.1079de3b.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n  fade,\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    fontFamily: theme.typography.fontFamily,\r\n    alignItems: 'center',\r\n    borderRadius: 2,\r\n    display: 'inline-flex',\r\n    flexGrow: 0,\r\n    whiteSpace: 'nowrap',\r\n    cursor: 'default',\r\n    flexShrink: 0,\r\n    fontSize: theme.typography.pxToRem(12),\r\n    fontWeight: theme.typography.fontWeightMedium,\r\n    height: 20,\r\n    justifyContent: 'center',\r\n    letterSpacing: 0.5,\r\n    minWidth: 20,\r\n    padding: theme.spacing(0.5, 1),\r\n    textTransform: 'uppercase',\r\n  },\r\n  primary: {\r\n    color: theme.palette.primary.main,\r\n    backgroundColor: fade(theme.palette.primary.main, 0.08)\r\n  },\r\n  secondary: {\r\n    color: theme.palette.secondary.main,\r\n    backgroundColor: fade(theme.palette.secondary.main, 0.08)\r\n  },\r\n  error: {\r\n    color: theme.palette.error.main,\r\n    backgroundColor: fade(theme.palette.error.main, 0.08)\r\n  },\r\n  success: {\r\n    color: theme.palette.success.main,\r\n    backgroundColor: fade(theme.palette.success.main, 0.08)\r\n  },\r\n  warning: {\r\n    color: theme.palette.warning.main,\r\n    backgroundColor: fade(theme.palette.warning.main, 0.08)\r\n  }\r\n}));\r\n\r\nfunction Label({\r\n  className,\r\n  color,\r\n  children,\r\n  style,\r\n  ...rest\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <span\r\n      className={\r\n        clsx(classes.root, {\r\n          [classes[color]]: color\r\n        }, className)\r\n      }\r\n      {...rest}\r\n    >\r\n      {children}\r\n    </span>\r\n  );\r\n}\r\n\r\nLabel.propTypes = {\r\n  children: PropTypes.node,\r\n  className: PropTypes.string,\r\n  style: PropTypes.object,\r\n  color: PropTypes.oneOf(['primary', 'secondary', 'error', 'warning', 'success'])\r\n};\r\n\r\nLabel.defaultProps = {\r\n  className: '',\r\n  color: 'secondary'\r\n};\r\n\r\nexport default Label;\r\n","import { useRef, useEffect } from 'react';\r\n\r\nexport default function useIsMountedRef() {\r\n  const isMounted = useRef(true);\r\n\r\n  useEffect(() => () => {\r\n    isMounted.current = false;\r\n  }, []);\r\n\r\n  return isMounted;\r\n}\r\n","import React, {\r\n  useRef,\r\n  useState,\r\n  memo\r\n} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Tooltip,\r\n  IconButton,\r\n  Menu,\r\n  MenuItem,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\r\nimport AchiveIcon from '@material-ui/icons/ArchiveOutlined';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  menu: {\r\n    width: 256,\r\n    maxWidth: '100%'\r\n  }\r\n}));\r\n\r\nfunction GenericMoreButton(props) {\r\n  const classes = useStyles();\r\n  const moreRef = useRef(null);\r\n  const [openMenu, setOpenMenu] = useState(false);\r\n\r\n  const handleMenuOpen = () => {\r\n    setOpenMenu(true);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setOpenMenu(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Tooltip title=\"More options\">\r\n        <IconButton\r\n          {...props}\r\n          onClick={handleMenuOpen}\r\n          ref={moreRef}\r\n        >\r\n          <MoreIcon fontSize=\"small\" />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Menu\r\n        anchorEl={moreRef.current}\r\n        anchorOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'left'\r\n        }}\r\n        onClose={handleMenuClose}\r\n        open={openMenu}\r\n        PaperProps={{ className: classes.menu }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'left'\r\n        }}\r\n      >\r\n        <MenuItem>\r\n          <ListItemIcon>\r\n            <ListIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"See All\" />\r\n        </MenuItem>        \r\n        <MenuItem>\r\n          <ListItemIcon>\r\n            <PictureAsPdfIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Export\" />\r\n        </MenuItem>        \r\n      </Menu>\r\n    </>\r\n  );\r\n}\r\n\r\nGenericMoreButton.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default memo(GenericMoreButton);\r\n","import React, {\r\n  useState,\r\n  useEffect,\r\n  useCallback\r\n} from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  CardHeader,\r\n  Divider,\r\n  Link,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport axios from 'src/utils/axios';\r\nimport getInitials from 'src/utils/getInitials';\r\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\r\nimport GenericMoreButton from 'src/components/GenericMoreButton';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  item: {\r\n    padding: theme.spacing(3),\r\n    flexGrow: 1,\r\n    '&:first-of-type': {\r\n      borderRight: `1px solid ${theme.palette.divider}`\r\n    }\r\n  }\r\n}));\r\n\r\nfunction CustomerActivity({ className, ...rest }) {\r\n  const classes = useStyles();\r\n  const isMountedRef = useIsMountedRef();\r\n  const [activities, setActivities] = useState(null);\r\n\r\n  const getActivities = useCallback(() => {\r\n    axios\r\n      .get('/api/reports/customer-activity')\r\n      .then((response) => {\r\n        if (isMountedRef.current) {\r\n          setActivities(response.data.activities);\r\n        }\r\n      });\r\n  }, [isMountedRef]);\r\n\r\n  useEffect(() => {\r\n    getActivities();\r\n  }, [getActivities]);\r\n\r\n  if (!activities) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardHeader\r\n        title=\"Customer Activity\"\r\n        action={<GenericMoreButton />}\r\n      />\r\n      <Divider />\r\n      <Box display=\"flex\">\r\n        <div className={classes.item}>\r\n          <Typography\r\n            align=\"center\"\r\n            variant=\"h3\"\r\n            color=\"textPrimary\"\r\n          >\r\n            15,245\r\n          </Typography>\r\n          <Typography\r\n            align=\"center\"\r\n            component=\"h4\"\r\n            gutterBottom\r\n            variant=\"overline\"\r\n            color=\"textSecondary\"\r\n          >\r\n            Registered\r\n          </Typography>\r\n        </div>\r\n        <Divider />\r\n        <div className={classes.item}>\r\n          <Typography\r\n            align=\"center\"\r\n            variant=\"h3\"\r\n            color=\"textPrimary\"\r\n          >\r\n            357\r\n          </Typography>\r\n          <Typography\r\n            align=\"center\"\r\n            component=\"h4\"\r\n            gutterBottom\r\n            variant=\"overline\"\r\n            color=\"textSecondary\"\r\n          >\r\n            Online\r\n          </Typography>\r\n        </div>\r\n      </Box>\r\n      <Divider />\r\n      <List disablePadding>\r\n        {activities.map((activity, i) => (\r\n          <ListItem\r\n            divider={i < activities.length - 1}\r\n            key={activity.id}\r\n          >\r\n            <ListItemAvatar>\r\n              <Avatar\r\n                alt=\"Customer\"\r\n                component={RouterLink}\r\n                src={activity.customer.avatar}\r\n                to=\"#\"\r\n              >\r\n                {getInitials(activity.customer.name)}\r\n              </Avatar>\r\n            </ListItemAvatar>\r\n            <ListItemText\r\n              disableTypography\r\n              primary={(\r\n                <Link\r\n                  color=\"textPrimary\"\r\n                  component={RouterLink}\r\n                  to=\"#\"\r\n                  underline=\"none\"\r\n                  variant=\"h6\"\r\n                >\r\n                  {activity.customer.name}\r\n                </Link>\r\n              )}\r\n              secondary={(\r\n                <Typography\r\n                  variant=\"body2\"\r\n                  color=\"textSecondary\"\r\n                >\r\n                  {activity.description}\r\n                </Typography>\r\n              )}\r\n            />\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              noWrap\r\n              variant=\"caption\"\r\n            >\r\n              {moment(activity.createdAt).fromNow()}\r\n            </Typography>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </Card>\r\n  );\r\n}\r\n\r\nCustomerActivity.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default CustomerActivity;\r\n","import React, {\r\n  useState,\r\n  useEffect,\r\n  useCallback\r\n} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardHeader,\r\n  Divider,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport GenericMoreButton from 'src/components/GenericMoreButton';\r\nimport axios from 'src/utils/axios';\r\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\r\nimport Chart from './Chart';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  item: {\r\n    textAlign: 'center',\r\n    flexGrow: 1,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    padding: theme.spacing(3, 2),\r\n    '&:not(:last-of-type)': {\r\n      borderRight: `1px solid ${theme.palette.divider}`\r\n    }\r\n  }\r\n}));\r\n\r\nfunction EarningsSegmentation({ className, ...rest }) {\r\n  const classes = useStyles();\r\n  const isMountedRef = useIsMountedRef();\r\n  const [earnings, setEarnings] = useState(null);\r\n\r\n  const getEarnings = useCallback(() => {\r\n    axios\r\n      .get('/api/reports/earnings')\r\n      .then((response) => {\r\n        if (isMountedRef.current) {\r\n          setEarnings(response.data.earnings);\r\n        }\r\n      });\r\n  }, [isMountedRef]);\r\n\r\n  useEffect(() => {\r\n    getEarnings();\r\n  }, [getEarnings]);\r\n\r\n  if (!earnings) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardHeader\r\n        action={<GenericMoreButton />}\r\n        title=\"Earnings Segmentation\"\r\n      />\r\n      <Divider />\r\n      <Box\r\n        p={3}\r\n        position=\"relative\"\r\n        minHeight={320}\r\n      >\r\n        <Chart data={earnings} />\r\n      </Box>\r\n      <Divider />\r\n      <Box display=\"flex\">\r\n        {earnings.labels.map((label, i) => (\r\n          <div\r\n            key={label}\r\n            className={classes.item}\r\n          >\r\n            <Typography\r\n              variant=\"h4\"\r\n              color=\"textPrimary\"\r\n            >\r\n              {earnings.datasets[0].data[i]}\r\n              %\r\n            </Typography>\r\n            <Typography\r\n              variant=\"overline\"\r\n              color=\"textSecondary\"\r\n            >\r\n              {label}\r\n            </Typography>\r\n          </div>\r\n        ))}\r\n      </Box>\r\n    </Card>\r\n  );\r\n}\r\n\r\nEarningsSegmentation.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default EarningsSegmentation;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport {\r\n  fade,\r\n  makeStyles,\r\n  useTheme\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    position: 'relative'\r\n  }\r\n}));\r\n\r\nfunction Chart({\r\n  data: dataProp,\r\n  labels,\r\n  className,\r\n  ...rest\r\n}) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const data = {\r\n    datasets: [\r\n      {\r\n        label: 'This year',\r\n        backgroundColor: theme.palette.secondary.main,\r\n        data: dataProp.thisYear,\r\n        barThickness: 12,\r\n        maxBarThickness: 10,\r\n        barPercentage: 0.5,\r\n        categoryPercentage: 0.5\r\n      },\r\n      {\r\n        label: 'Last year',\r\n        backgroundColor: fade(theme.palette.secondary.main, 0.25),\r\n        data: dataProp.lastYear,\r\n        barThickness: 12,\r\n        maxBarThickness: 10,\r\n        barPercentage: 0.5,\r\n        categoryPercentage: 0.5\r\n      }\r\n    ],\r\n    labels\r\n  };\r\n\r\n  const options = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    animation: false,\r\n    cornerRadius: 20,\r\n    legend: {\r\n      display: false\r\n    },\r\n    layout: {\r\n      padding: 0\r\n    },\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          gridLines: {\r\n            display: false,\r\n            drawBorder: false\r\n          },\r\n          ticks: {\r\n            padding: 20,\r\n            fontColor: theme.palette.text.secondary\r\n          }\r\n        }\r\n      ],\r\n      yAxes: [\r\n        {\r\n          gridLines: {\r\n            borderDash: [2],\r\n            borderDashOffset: [2],\r\n            color: theme.palette.divider,\r\n            drawBorder: false,\r\n            zeroLineBorderDash: [2],\r\n            zeroLineBorderDashOffset: [2],\r\n            zeroLineColor: theme.palette.divider\r\n          },\r\n          ticks: {\r\n            padding: 20,\r\n            fontColor: theme.palette.text.secondary,\r\n            beginAtZero: true,\r\n            min: 0,\r\n            maxTicksLimit: 5,\r\n            callback: (value) => (value > 0 ? `${value}K` : value)\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    tooltips: {\r\n      enabled: true,\r\n      mode: 'index',\r\n      intersect: false,\r\n      caretSize: 10,\r\n      yPadding: 20,\r\n      xPadding: 20,\r\n      borderWidth: 1,\r\n      borderColor: theme.palette.divider,\r\n      backgroundColor: theme.palette.background.dark,\r\n      titleFontColor: theme.palette.text.primary,\r\n      bodyFontColor: theme.palette.text.secondary,\r\n      footerFontColor: theme.palette.text.secondary,\r\n      callbacks: {\r\n        title: () => {},\r\n        label: (tooltipItem) => {\r\n          let label = `Sales: ${tooltipItem.yLabel}`;\r\n\r\n          if (tooltipItem.yLabel > 0) {\r\n            label += 'K';\r\n          }\r\n\r\n          return label;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Bar\r\n        data={data}\r\n        options={options}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nChart.propTypes = {\r\n  className: PropTypes.string,\r\n  data: PropTypes.object.isRequired,\r\n  labels: PropTypes.array.isRequired\r\n};\r\n\r\nexport default Chart;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardHeader,\r\n  Divider,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport GenericMoreButton from 'src/components/GenericMoreButton';\r\nimport Chart from './Chart';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  chart: {\r\n    height: 400\r\n  }\r\n}));\r\n\r\nfunction FinancialStats({ className, ...rest }) {\r\n  const classes = useStyles();\r\n  const stats = {\r\n    thisYear: [18, 16, 5, 8, 3, 14, 14, 16, 17, 19, 18, 20],\r\n    lastYear: [12, 11, 4, 6, 2, 9, 9, 10, 11, 12, 13, 13]\r\n  };\r\n  const labels = [\r\n    'Jan',\r\n    'Feb',\r\n    'Mar',\r\n    'Apr',\r\n    'May',\r\n    'Jun',\r\n    'Jul',\r\n    'Aug',\r\n    'Sep',\r\n    'Oct',\r\n    'Nov',\r\n    'Dec'\r\n  ];\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardHeader\r\n        action={<GenericMoreButton />}\r\n        title=\"Financial Stats\"\r\n      />\r\n      <Divider />\r\n      <PerfectScrollbar>\r\n        <Box\r\n          minWidth={700}\r\n          pt={4}\r\n          pr={2}\r\n          pl={2}\r\n        >\r\n          <Chart\r\n            className={classes.chart}\r\n            data={stats}\r\n            labels={labels}\r\n          />\r\n        </Box>\r\n      </PerfectScrollbar>\r\n    </Card>\r\n  );\r\n}\r\n\r\nFinancialStats.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default FinancialStats;\r\n","import React, { useRef, useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Breadcrumbs,\r\n  Button,\r\n  Grid,\r\n  Link,\r\n  Menu,\r\n  MenuItem,\r\n  SvgIcon,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport { Calendar as CalendarIcon } from 'react-feather';\r\n\r\nconst timeRanges = [\r\n  {\r\n    value: 'today',\r\n    text: 'Today'\r\n  },\r\n  {\r\n    value: 'yesterday',\r\n    text: 'Yesterday'\r\n  },\r\n  {\r\n    value: 'last_30_days',\r\n    text: 'Last 30 days'\r\n  },\r\n  {\r\n    value: 'last_year',\r\n    text: 'Last year'\r\n  }\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  actionIcon: {\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nfunction Header({ className, ...rest }) {\r\n  const classes = useStyles();\r\n  const actionRef = useRef(null);\r\n  const [isMenuOpen, setMenuOpen] = useState(false);\r\n  const [timeRange, setTimeRange] = useState(timeRanges[2].text);\r\n\r\n  return (\r\n    <Grid\r\n      className={clsx(classes.root, className)}\r\n      container\r\n      justify=\"space-between\"\r\n      spacing={3}\r\n      {...rest}\r\n    >\r\n      <Grid item>\r\n        <Breadcrumbs\r\n          separator={<NavigateNextIcon fontSize=\"small\" />}\r\n          aria-label=\"breadcrumb\"\r\n        >\r\n          <Link\r\n            variant=\"body1\"\r\n            color=\"inherit\"\r\n            to=\"/app\"\r\n            component={RouterLink}\r\n          >\r\n            Lead Nurture Dashboard\r\n          </Link>         \r\n        </Breadcrumbs>\r\n        <Typography\r\n          variant=\"h3\"\r\n          color=\"textPrimary\"\r\n        >\r\n          Lead Nurture Dashboard\r\n        </Typography>\r\n      </Grid>\r\n      \r\n      \r\n    </Grid>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nHeader.defaultProps = {};\r\n\r\nexport default Header;\r\n","import React, {\r\n  useCallback,\r\n  useState,\r\n  useEffect\r\n} from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TableSortLabel,\r\n  Tooltip,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport Label from 'src/components/Label';\r\nimport GenericMoreButton from 'src/components/GenericMoreButton';\r\nimport axios from 'src/utils/axios';\r\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\r\n\r\nconst labelColors = {\r\n  complete: 'success',\r\n  pending: 'warning',\r\n  rejected: 'error'\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  navigateNextIcon: {\r\n    marginLeft: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nfunction LatestOrders({ className, ...rest }) {\r\n  const classes = useStyles();\r\n  const isMountedRef = useIsMountedRef();\r\n  const [orders, setOrders] = useState(null);\r\n\r\n  const getOrders = useCallback(() => {\r\n    axios\r\n      .get('/api/reports/latest-orders')\r\n      .then((response) => {\r\n        if (isMountedRef.current) {\r\n          setOrders(response.data.orders);\r\n        }\r\n      });\r\n  }, [isMountedRef]);\r\n\r\n  useEffect(() => {\r\n    getOrders();\r\n  }, [getOrders]);\r\n\r\n  if (!orders) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardHeader\r\n        action={<GenericMoreButton />}\r\n        title=\"Latest Orders\"\r\n      />\r\n      <Divider />\r\n      <PerfectScrollbar>\r\n        <Box minWidth={700}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell sortDirection=\"desc\">\r\n                  <Tooltip\r\n                    enterDelay={300}\r\n                    title=\"Sort\"\r\n                  >\r\n                    <TableSortLabel\r\n                      active\r\n                      direction=\"desc\"\r\n                    >\r\n                      Order ID\r\n                    </TableSortLabel>\r\n                  </Tooltip>\r\n                </TableCell>\r\n                <TableCell>\r\n                  Customer\r\n                </TableCell>\r\n                <TableCell>\r\n                  Items\r\n                </TableCell>\r\n                <TableCell>\r\n                  Total\r\n                </TableCell>\r\n                <TableCell>\r\n                  Status\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                  Date\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {orders.map((order) => (\r\n                <TableRow\r\n                  hover\r\n                  key={order.id}\r\n                >\r\n                  <TableCell>{order.ref}</TableCell>\r\n                  <TableCell>{order.customer.name}</TableCell>\r\n                  <TableCell>{order.items}</TableCell>\r\n                  <TableCell>\r\n                    {order.currency}\r\n                    {order.value}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Label color={labelColors[order.status]}>\r\n                      {order.status}\r\n                    </Label>\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">\r\n                    {moment(order.createdAt).format('DD MMM, YYYY hh:mm:ss')}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Box>\r\n      </PerfectScrollbar>\r\n      <Box\r\n        p={2}\r\n        display=\"flex\"\r\n        justifyContent=\"flex-end\"\r\n      >\r\n        <Button\r\n          component={RouterLink}\r\n          size=\"small\"\r\n          to=\"/app/management/orders\"\r\n        >\r\n          See all\r\n          <NavigateNextIcon className={classes.navigateNextIcon} />\r\n        </Button>\r\n      </Box>\r\n    </Card>\r\n  );\r\n}\r\n\r\nLatestOrders.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default LatestOrders;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: 56,\r\n    height: 56\r\n  },\r\n  circle1: {\r\n    stroke: theme.palette.type === 'dark' ? 'rgba(0,0,0,0.15)' : 'rgba(0,0,0,0.05)',\r\n    fill: 'none',\r\n    strokeWidth: 4\r\n  },\r\n  circle2: {\r\n    stroke: theme.palette.secondary.main,\r\n    fill: 'none',\r\n    strokeWidth: 4,\r\n    animation: '$progress 1s ease-out forwards'\r\n  },\r\n  '@keyframes progress': {\r\n    '0%': {\r\n      strokeDasharray: '0 100'\r\n    }\r\n  }\r\n}));\r\n\r\nfunction CircularProgress({ value, className, ...rest }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <svg viewBox=\"0 0 36 36\">\r\n        <path\r\n          className={classes.circle1}\r\n          d=\"M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n          strokeDasharray=\"100, 100\"\r\n        />\r\n        <path\r\n          className={classes.circle2}\r\n          d=\"M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n          strokeDasharray={`${value}, 100`}\r\n        />\r\n      </svg>\r\n    </div>\r\n  );\r\n}\r\n\r\nCircularProgress.propTypes = {\r\n  className: PropTypes.string,\r\n  value: PropTypes.number.isRequired\r\n};\r\n\r\nexport default CircularProgress;\r\n","import React, {\r\n  useState,\r\n  useEffect,\r\n  useCallback\r\n} from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableRow,\r\n  Typography,\r\n  colors,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport axios from 'src/utils/axios';\r\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\r\nimport GenericMoreButton from 'src/components/GenericMoreButton';\r\nimport CircularProgress from './CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  image: {\r\n    flexShrink: 0,\r\n    height: 56,\r\n    width: 56\r\n  },\r\n  subscriptions: {\r\n    fontWeight: theme.typography.fontWeightMedium\r\n  },\r\n  value: {\r\n    color: colors.green[600],\r\n    fontWeight: theme.typography.fontWeightMedium\r\n  },\r\n  navigateNextIcon: {\r\n    marginLeft: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nfunction MostProfitableProducts({ className, ...rest }) {\r\n  const classes = useStyles();\r\n  const isMountedRef = useIsMountedRef();\r\n  const [products, setProducts] = useState(null);\r\n\r\n  const getProducts = useCallback(() => {\r\n    axios\r\n      .get('/api/reports/profitable-products')\r\n      .then((response) => {\r\n        if (isMountedRef.current) {\r\n          setProducts(response.data.products);\r\n        }\r\n      });\r\n  }, [isMountedRef]);\r\n\r\n  useEffect(() => {\r\n    getProducts();\r\n  }, [getProducts]);\r\n\r\n  if (!products) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardHeader\r\n        action={<GenericMoreButton />}\r\n        title=\"Most Profitable Products\"\r\n      />\r\n      <Divider />\r\n      <PerfectScrollbar>\r\n        <Box minWidth={700}>\r\n          <Table>\r\n            <TableBody>\r\n              {products.map((product) => (\r\n                <TableRow\r\n                  hover\r\n                  key={product.id}\r\n                >\r\n                  <TableCell>\r\n                    <Box\r\n                      display=\"flex\"\r\n                      alignItems=\"center\"\r\n                    >\r\n                      <img\r\n                        alt=\"Product\"\r\n                        className={classes.image}\r\n                        src={product.image}\r\n                      />\r\n                      <Box ml={2}>\r\n                        <Typography\r\n                          variant=\"h6\"\r\n                          color=\"textPrimary\"\r\n                        >\r\n                          {product.name}\r\n                        </Typography>\r\n                        <Typography\r\n                          variant=\"body2\"\r\n                          color=\"textSecondary\"\r\n                        >\r\n                          <span className={classes.subscriptions}>\r\n                            {product.subscriptions}\r\n                          </span>\r\n                          {' '}\r\n                          Active\r\n                        </Typography>\r\n                      </Box>\r\n                    </Box>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Typography\r\n                      variant=\"h6\"\r\n                      color=\"textPrimary\"\r\n                    >\r\n                      Price\r\n                    </Typography>\r\n                    <Typography\r\n                      noWrap\r\n                      variant=\"body2\"\r\n                      color=\"textSecondary\"\r\n                    >\r\n                      <span className={classes.value}>\r\n                        {product.currency}\r\n                        {product.price}\r\n                      </span>\r\n                      {' '}\r\n                      monthly\r\n                    </Typography>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Box\r\n                      display=\"flex\"\r\n                      alignItems=\"center\"\r\n                      justifyContent=\"flex-end\"\r\n                    >\r\n                      <Box mr={2}>\r\n                        <Typography\r\n                          align=\"right\"\r\n                          variant=\"h6\"\r\n                          color=\"textPrimary\"\r\n                        >\r\n                          {product.progress}\r\n                          %\r\n                        </Typography>\r\n                        <Typography\r\n                          variant=\"body2\"\r\n                          color=\"textSecondary\"\r\n                        >\r\n                          Conversion Rate\r\n                        </Typography>\r\n                      </Box>\r\n                      <CircularProgress value={product.progress} />\r\n                    </Box>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Box>\r\n      </PerfectScrollbar>\r\n      <Box\r\n        p={2}\r\n        display=\"flex\"\r\n        justifyContent=\"flex-end\"\r\n      >\r\n        <Button\r\n          component={RouterLink}\r\n          size=\"small\"\r\n          to=\"#\"\r\n        >\r\n          See all\r\n          <NavigateNextIcon className={classes.navigateNextIcon} />\r\n        </Button>\r\n      </Box>\r\n    </Card>\r\n  );\r\n}\r\n\r\nMostProfitableProducts.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default MostProfitableProducts;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Card,\r\n  Grid,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Label from 'src/components/Label';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  item: {\r\n    padding: theme.spacing(3),\r\n    textAlign: 'center',\r\n    [theme.breakpoints.up('md')]: {\r\n      '&:not(:last-of-type)': {\r\n        borderRight: `1px solid ${theme.palette.divider}`\r\n      }\r\n    },\r\n    [theme.breakpoints.down('sm')]: {\r\n      '&:not(:last-of-type)': {\r\n        borderBottom: `1px solid ${theme.palette.divider}`\r\n      }\r\n    }\r\n  },\r\n  valueContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  label: {\r\n    marginLeft: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nfunction Overview({ className, ...rest }) {\r\n  const classes = useStyles();\r\n  const overview = {\r\n    income: '854,355.00',\r\n    expanses: '373,250.50',\r\n    profit: '123,532.00',\r\n    subscriptions: '26,000'\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Grid\r\n        alignItems=\"center\"\r\n        container\r\n        justify=\"space-between\"\r\n      >\r\n          <Grid\r\n          className={classes.item}\r\n          item\r\n          md={3}\r\n          sm={6}\r\n          xs={12}\r\n        >\r\n          <Typography variant=\"h1\">\r\n            21\r\n          </Typography>\r\n          <div className={classes.valueContainer}>\r\n            <Typography\r\n              variant=\"h3\"\r\n              color=\"textPrimary\"\r\n              gutterBottom\r\n            >              \r\n              Signups\r\n            </Typography>            \r\n          </div>\r\n          <div className={classes.valueContainer}>\r\n          <Label\r\n              className={classes.label}\r\n              color=\"primary\"\r\n            >\r\n              Last 30 Days\r\n            </Label>\r\n            </div>\r\n        </Grid>\r\n        <Grid\r\n          className={classes.item}\r\n          item\r\n          md={3}\r\n          sm={6}\r\n          xs={12}\r\n        >\r\n          <Typography            \r\n            variant=\"h1\"\r\n            \r\n          >\r\n            19\r\n          </Typography>\r\n          <div className={classes.valueContainer}>\r\n            <Typography\r\n              variant=\"h3\"\r\n              color=\"textPrimary\"\r\n              gutterBotton\r\n            >              \r\n              Leads\r\n            </Typography>            \r\n          </div>\r\n          <div className={classes.valueContainer}>\r\n          <Label\r\n              className={classes.label}\r\n              color=\"primary\"\r\n            >\r\n              Last 14 Days\r\n            </Label>\r\n            </div>\r\n        </Grid>\r\n        <Grid\r\n          className={classes.item}\r\n          item\r\n          md={3}\r\n          sm={6}\r\n          xs={12}\r\n        >\r\n          <Typography\r\n\r\n            variant=\"h1\"\r\n            \r\n          >\r\n            8\r\n          </Typography>\r\n          <div className={classes.valueContainer}>\r\n            <Typography\r\n              variant=\"h3\"\r\n              color=\"textPrimary\"\r\n              \r\n              gutterBottom\r\n            >              \r\n              Appts\r\n            </Typography>            \r\n          </div>\r\n          <div className={classes.valueContainer}>\r\n          <Label\r\n              className={classes.label}\r\n              color=\"success\"\r\n            >\r\n              Next 7 Days\r\n            </Label>\r\n            </div>\r\n        </Grid>\r\n        <Grid\r\n          className={classes.item}\r\n          item\r\n          md={3}\r\n          sm={6}\r\n          xs={12}\r\n        >\r\n          <Typography variant=\"h1\">\r\n            314\r\n          </Typography>\r\n          <div className={classes.valueContainer}>\r\n            <Typography\r\n              variant=\"h3\"\r\n              color=\"textPrimary\"\r\n              gutterBottom\r\n            >              \r\n              Leads\r\n            </Typography>            \r\n          </div>\r\n          <div className={classes.valueContainer}>\r\n          <Label\r\n              className={classes.labelTotal}\r\n              color=\"success\"\r\n            >\r\n              Total\r\n            </Label>\r\n            </div>\r\n        </Grid>\r\n       \r\n      </Grid>\r\n    </Card>\r\n  );\r\n}\r\n\r\nOverview.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Overview;\r\n","import React, {\r\n  useState,\r\n  useEffect,\r\n  useCallback\r\n} from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Card,\r\n  CardHeader,\r\n  Divider,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  Typography,\r\n  makeStyles,\r\n  Grid\r\n} from '@material-ui/core';\r\nimport GenericMoreButton from 'src/components/GenericMoreButton';\r\nimport axios from 'src/utils/axios';\r\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  avatar: {\r\n    fontSize: 12,\r\n    fontWeight: theme.typography.fontWeightBold,\r\n    color: theme.palette.common.white\r\n  }\r\n}));\r\n\r\nfunction TopReferrals({ className, ...rest }) {\r\n  const classes = useStyles();\r\n  const isMountedRef = useIsMountedRef();\r\n  const [referrals, setReferrals] = useState(null);\r\n\r\n  const getReferrals = useCallback(() => {\r\n    axios\r\n      .get('/api/reports/top-referrals')\r\n      .then((response) => {\r\n        if (isMountedRef.current) {\r\n          setReferrals(response.data.referrals);\r\n        }\r\n      });\r\n  }, [isMountedRef]);\r\n\r\n  useEffect(() => {\r\n    getReferrals();\r\n  }, [getReferrals]);\r\n\r\n  if (!referrals) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardHeader\r\n        action={<GenericMoreButton />}\r\n        title=\"New Leads\"\r\n      />\r\n      <Divider />\r\n      <List disablePadding>\r\n        {referrals.map((referral, i) => (\r\n          <ListItem\r\n            style={{ height: 72 }}\r\n            divider={i < referrals.length - 1}\r\n            key={referral.name}\r\n          >\r\n            <ListItemAvatar>\r\n              <Avatar\r\n                className={classes.avatar}\r\n                size=\"large\"\r\n                style={{ backgroundColor: referral.color }}\r\n              >\r\n                <Grid container justify='center' alignItems='center'>\r\n                  <Grid item container justify='center' xs={12}>\r\n                  Day \r\n\r\n                  </Grid>\r\n                  <Grid item container justify='center' xs={12}>\r\n                  {referral.day}\r\n                    \r\n                  </Grid>\r\n                </Grid>\r\n              </Avatar>\r\n            </ListItemAvatar>\r\n            <ListItemText\r\n              primary={referral.name}\r\n              secondary={referral.phone}\r\n              primaryTypographyProps={{ variant: 'h6' }}\r\n            />\r\n            <Typography\r\n              variant=\"body2\"\r\n              color=\"textSecondary\"\r\n            >\r\n              {referral.value}\r\n            </Typography>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </Card>\r\n  );\r\n}\r\n\r\nTopReferrals.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default TopReferrals;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Card,\r\n  CardHeader,\r\n  Divider,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  Typography,\r\n  makeStyles,\r\n  Grid\r\n} from '@material-ui/core';\r\nimport GenericMoreButton from 'src/components/GenericMoreButton';\r\nimport axios from 'src/utils/axios';\r\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\r\nimport Label from 'src/components/Label';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  avatar: {\r\n    fontSize: 12,\r\n    fontWeight: theme.typography.fontWeightBold,\r\n    color: theme.palette.common.white\r\n  }\r\n}));\r\n\r\nfunction TopReferrals2({ className, ...rest }) {\r\n  const classes = useStyles();\r\n  const isMountedRef = useIsMountedRef();\r\n  const [referrals, setReferrals] = useState(null);\r\n\r\n  const getReferrals = useCallback(() => {\r\n    axios.get('/api/reports/top-referrals').then(response => {\r\n      if (isMountedRef.current) {\r\n        setReferrals(response.data.referrals);\r\n      }\r\n    });\r\n  }, [isMountedRef]);\r\n\r\n  useEffect(() => {\r\n    getReferrals();\r\n}, [getReferrals]);\r\n\r\n  if (!referrals) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Card className={clsx(classes.root, className)} {...rest}>\r\n      <CardHeader\r\n        action={<GenericMoreButton />}\r\n        title=\"Upcoming Appointments\"\r\n      />\r\n      <Divider />\r\n      <List disablePadding>\r\n        {referrals.map((referral, i) => (\r\n          <ListItem\r\n            style={{ height: 72 }}\r\n            divider={i < referrals.length - 1}\r\n            key={referral.name}\r\n          >\r\n            <ListItemAvatar style={{ maxWidth: 96 }}>\r\n              <Grid container alignItems=\"center\">\r\n                <Grid item container xs={12}>\r\n                  <Label className={classes.labelTotal} color=\"success\">\r\n                    May 20th\r\n                  </Label>\r\n                </Grid>\r\n                <Grid item container xs={12}>\r\n                  10:00 AM\r\n                </Grid>\r\n              </Grid>\r\n            </ListItemAvatar>\r\n            <ListItemText\r\n              primary={referral.name}\r\n              secondary={referral.phone}\r\n              primaryTypographyProps={{ noWrap: true, variant: 'h6' }}\r\n              secondaryTypographyProps={{ noWrap: true, variant: 'h6' }}\r\n            />\r\n            <Typography variant=\"body2\" color=\"textSecondary\">\r\n              {referral.value}\r\n            </Typography>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </Card>\r\n  );\r\n}\r\n\r\nTopReferrals2.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default TopReferrals2;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Card,\r\n  CardHeader,\r\n  Divider,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  Typography,\r\n  makeStyles,\r\n  Grid,\r\n  Button\r\n} from '@material-ui/core';\r\nimport GenericMoreButton from 'src/components/GenericMoreButton';\r\nimport axios from 'src/utils/axios';\r\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\r\nimport Label from 'src/components/Label';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  avatar: {\r\n    fontSize: 12,\r\n    fontWeight: theme.typography.fontWeightBold,\r\n    color: theme.palette.common.white\r\n  }\r\n}));\r\n\r\nfunction TopReferrals3({ className, ...rest }) {\r\n  const classes = useStyles();\r\n  const isMountedRef = useIsMountedRef();\r\n  const [referrals, setReferrals] = useState(null);\r\n\r\n  const getReferrals = useCallback(() => {\r\n    axios.get('/api/reports/top-referrals').then(response => {\r\n      if (isMountedRef.current) {\r\n        setReferrals(response.data.referrals);\r\n      }\r\n    });\r\n  }, [isMountedRef]);\r\n\r\n  useEffect(() => {\r\n    getReferrals();\r\n  }, [getReferrals]);\r\n\r\n  if (!referrals) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Card className={clsx(classes.root, className)} {...rest}>\r\n      <CardHeader action={<GenericMoreButton />} title=\"Past Appointments\" />\r\n      <Divider />\r\n      <List disablePadding>\r\n        {referrals.map((referral, i) => (\r\n          <ListItem\r\n            style={{ height: 72 }}\r\n            divider={i < referrals.length - 1}\r\n            key={referral.name}\r\n          >\r\n            <ListItemAvatar style={{ maxWidth: 96 }}>\r\n              <Grid container alignItems=\"center\">\r\n                <Grid item container xs={12}>\r\n                  <Label className={classes.labelTotal} color=\"primary\">\r\n                    Apr 1st\r\n                  </Label>\r\n                </Grid>\r\n                <Grid item container xs={12}>\r\n                  10:00 AM\r\n                </Grid>\r\n              </Grid>\r\n            </ListItemAvatar>\r\n            <ListItemText\r\n              primary={referral.name}\r\n              secondary={referral.phone}\r\n              primaryTypographyProps={{ noWrap: true, variant: 'h6' }}\r\n              secondaryTypographyProps={{ noWrap: true, variant: 'h6' }}\r\n            />\r\n            <Typography variant=\"body2\" color=\"textSecondary\">\r\n              {referral.value}\r\n            </Typography>\r\n            <Grid\r\n              container\r\n              style={{ maxWidth: 240 }}\r\n              alignItems=\"center\"\r\n              justify=\"flex-end\"\r\n              spacing={2}\r\n            >\r\n              <Grid item>\r\n                <Button size=\"small\" variant=\"contained\" color=\"primary\">\r\n                  Showed\r\n                </Button>\r\n              </Grid>\r\n              <Grid>\r\n                <Button size=\"small\" variant=\"outlined\" color=\"error\">\r\n                  No Show\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </Card>\r\n  );\r\n}\r\n\r\nTopReferrals3.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default TopReferrals3;\r\n","import React from 'react';\r\nimport { Container, Grid, makeStyles } from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\nimport CustomerActivity from './CustomerActivity';\r\nimport EarningsSegmentation from './EarningsSegmentation';\r\nimport FinancialStats from './FinancialStats';\r\nimport Header from './Header';\r\nimport LatestOrders from './LatestOrders';\r\nimport MostProfitableProducts from './MostProfitableProducts';\r\nimport Overview from './Overview';\r\nimport TopReferrals from './TopReferrals';\r\nimport TopReferrals2 from './TopReferrals2';\r\nimport TopReferrals3 from './TopReferrals3';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: '100%',\r\n    paddingTop: theme.spacing(3),\r\n    paddingBottom: theme.spacing(3)\r\n  },\r\n  container: {\r\n    [theme.breakpoints.up('lg')]: {\r\n      paddingLeft: 64,\r\n      paddingRight: 64\r\n    }\r\n  }\r\n}));\r\n\r\nfunction DashboardAlternativeView() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Lead Nurture Dashboard\">\r\n      <Container maxWidth={false} className={classes.container}>\r\n        <Header />\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <Overview />\r\n          </Grid>\r\n          <Grid item lg={3} xs={12}>\r\n            <TopReferrals />\r\n          </Grid>\r\n          <Grid item lg={3} xs={12}>\r\n            <TopReferrals2 />\r\n          </Grid>\r\n          <Grid item lg={6} xs={12}>\r\n            <TopReferrals3 />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n\r\nexport default DashboardAlternativeView;\r\n"],"sourceRoot":""}